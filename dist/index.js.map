{
  "version": 3,
  "sources": ["../src/mixpanelContext.ts", "../src/MixpanelProvider.tsx", "../src/useMixpanel.ts"],
  "sourcesContent": ["import { type Mixpanel } from 'mixpanel-browser';\nimport { createContext } from 'react';\n\nexport type MixpanelContext = Mixpanel | undefined;\n\nexport const mixpanelContext = createContext<MixpanelContext>(undefined);\n", "import mixpanel, { type Config } from 'mixpanel-browser';\nimport { type ProviderProps, useMemo } from 'react';\nimport { type MixpanelContext, mixpanelContext } from './mixpanelContext.js';\n\nexport interface MixpanelProviderProps extends Omit<ProviderProps<MixpanelContext>, 'value'> {\n  config?: Partial<Config>;\n  name?: string;\n  token?: string;\n}\n\nexport function MixpanelProvider({\n  children,\n  config: _config,\n  name: _name,\n  token,\n}: MixpanelProviderProps) {\n  const name = useMemo(() => _name ?? 'react-mixpanel-browser', [_name]);\n\n  const config = useMemo(\n    () => ({\n      track_pageview: false, // Rarely makes sense to track page views in React apps\n      ..._config,\n    }),\n    [_config],\n  );\n\n  const context = useMemo(\n    () => (token ? mixpanel.init(token, config, name) : undefined),\n    [config, name, token],\n  );\n\n  return <mixpanelContext.Provider value={context}>{children}</mixpanelContext.Provider>;\n}\n", "import { useContext } from 'react';\nimport { type MixpanelContext, mixpanelContext } from './mixpanelContext.js';\n\nexport const useMixpanel = (): MixpanelContext => useContext(mixpanelContext);\n"],
  "mappings": "AACA,OAAS,iBAAAA,MAAqB,QAIvB,IAAMC,EAAkBD,EAA+B,MAAS,ECLvE,OAAOE,MAA+B,mBACtC,OAA6B,WAAAC,MAAe,QA8BnC,cAAAC,MAAA,oBArBF,SAASC,EAAiB,CAC/B,SAAAC,EACA,OAAQC,EACR,KAAMC,EACN,MAAAC,CACF,EAA0B,CACxB,IAAMC,EAAOC,EAAQ,IAAMH,GAAS,yBAA0B,CAACA,CAAK,CAAC,EAE/DI,EAASD,EACb,KAAO,CACL,eAAgB,GAChB,GAAGJ,CACL,GACA,CAACA,CAAO,CACV,EAEMM,EAAUF,EACd,IAAOF,EAAQK,EAAS,KAAKL,EAAOG,EAAQF,CAAI,EAAI,OACpD,CAACE,EAAQF,EAAMD,CAAK,CACtB,EAEA,OAAOL,EAACW,EAAgB,SAAhB,CAAyB,MAAOF,EAAU,SAAAP,EAAS,CAC7D,CChCA,OAAS,cAAAU,MAAkB,QAGpB,IAAMC,EAAc,IAAuBC,EAAWC,CAAe",
  "names": ["createContext", "mixpanelContext", "mixpanel", "useMemo", "jsx", "MixpanelProvider", "children", "_config", "_name", "token", "name", "useMemo", "config", "context", "mixpanel", "mixpanelContext", "useContext", "useMixpanel", "useContext", "mixpanelContext"]
}
